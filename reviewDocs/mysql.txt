RANK, ROW_NUMBER and DENSE_RANK
    WITH T(StyleID, ID)
        AS (SELECT 1,1 UNION ALL
            SELECT 1,1 UNION ALL
            SELECT 1,1 UNION ALL
            SELECT 1,2)
    SELECT *,
        RANK() OVER(PARTITION BY StyleID ORDER BY ID)       AS [RANK],
        ROW_NUMBER() OVER(PARTITION BY StyleID ORDER BY ID) AS [ROW_NUMBER],
        DENSE_RANK() OVER(PARTITION BY StyleID ORDER BY ID) AS [DENSE_RANK]
    FROM   T 

    Returns

    StyleID     ID       RANK      ROW_NUMBER      DENSE_RANK
    ----------- -------- --------- --------------- ----------
    1           1        1         1               1
    1           1        1         2               1
    1           1        1         3               1
    1           2        4         4               2

    You can see that for the three identical rows the ROW_NUMBER increments, the RANK value remains the same then it leaps to 4. 
    DENSE_RANK also assigns the same rank to all three rows but then the next distinct value is assigned a value of 2.

Select duplicate rows from the table

    SELECT [FirstName], 
        [LastName], 
        [Country], 
        COUNT(*) AS CNT
    FROM [SampleDB].[dbo].[Employee]
    GROUP BY [FirstName], 
        [LastName], 
        [Country]
    HAVING COUNT(*) > 1;

Delete duplicate rows from the table

    DELETE FROM [SampleDB].[dbo].[Employee]
        WHERE ID NOT IN
        (
            SELECT MAX(ID) AS MaxRecordID
            FROM [SampleDB].[dbo].[Employee]
            GROUP BY [FirstName], 
                    [LastName], 
                    [Country]
        );

How to create an Index in MySQL?
    In MySQL, there are different index types, such as a regular INDEX, a PRIMARY KEY, or a FULLTEXT index. You can achieve fast searches with the help of an index. Indexes speed up performance by either ordering the data on disk so it's quicker to find your result or, telling the SQL engine where to go to find your data.

    Example: Adding indexes to the history table:

    ALTER TABLE history ADD INDEX(author(10));
    ALTER TABLE history ADD INDEX(title(10));
    ALTER TABLE history ADD INDEX(category(5));
    ALTER TABLE history ADD INDEX(year);
    DESCRIBE history;

What is BLOB in MySQL?
    BLOB is an acronym that stands for a binary large object. It is used to hold a variable amount of data.
    There are four types of BLOB:

    TINYBLOB
    BLOB
    MEDIUMBLOB
    LONGBLOB
    A BLOB can hold a very large amount of data. For example - documents, images, and even videos. You could store your complete novel as a file in a BLOB if needed.


