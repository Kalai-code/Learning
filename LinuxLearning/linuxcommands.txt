Linux commands:

echo hello - prints hello on the terminal
whoami - shows the current user
echo $0 - shows the location of the shell program i.e., /bin/bash
history - list the commands which are executed Earlier
pwd - print the working directory

mkdir <name> - to create a directory
cd <name> - to navigate to the directory
mv <souce> <destination> - moves the file or folder from source to destination. This command can also be used for renaming a file or folder.

ls - list the files and folders in the current directory
ls -l - long listing of files and folders in the current directory
ls -1 - list the files and folder names one by one
ls /bin - lists all the files in the bin folder
cd ~ - takes us to the home directory of the user

touch <filename> - creates a file with the given name
touch <filename1> <filename2> - creates multiple files.
cat <filename> - to view the contents of the file
cat <sourcefilename> > <destinationfilename> - copies the content from the source file and writes it to the destination file.
cat <filename1> <filename2> > <filename3> - copies the content from filename1 and filename3 and writes it to filename3.
more <filename> - to view contents of large file. Press space to move the pages. We can only scroll down using more command. We cannot scroll up to see the contents.
                    to exit, press q
less <filename> - to see contents of large file. Use up and down arrow to scroll between the pages.Press q to quit
head -n 5 <filename> - shows the first 5 lines of the file.
tail -n 5 <filename> - shows the last 5 lines of the file.

code <filename> - opens the file in VS code
cd .. - to move to the previous directory
ls -a - shows the hidden files in the current directory
ctrl + l - to clear the screen
rm <filename1> <filename2> - removes the files from the directory
rm -r <directoryname>/ - removes the directory and its contents recursively
grep <searchstring> <filename> - grep(global regular expression print). This command searches for the string in the file provided and returns the result.
grep -i <searchstring> <filename> - ignores the case which performing search. We can perform search in multiple files, using patterns. 
grep -i -r <searchstring> . - searches for the string in current directory
find - this command finds all the directories and files present in the current directory
find type -d - returns only the directories from the current directory
find type -f - returns only the files from the current directory

Chaining commands:
mkdir <directoryname> ; cd <directoryname> ; echo done - executes all the commands together
mkdir <directoryname> && cd <directoryname> && echo done - if the first command fails, 2nd and 3rd doesnt get executed
mkdir <directoryname> || echo directory Exists - if first command executes successfully, 2nd doesnt get executed. If 1st command fails, 2nd gets executed


ubuntu:

apt(advanced package tool)
apt update - updates the packaged
apt install nano - installs the nano text editor package
apt list - shows all the packages
apt remove nano - uninstalls the nano package

File system:
df -k - df(disk free). This command displays the disk space usage in kilobytes
df -h - This command displays the disk space usage in kilobytes in human understandable format.
du <foldername> - du(disk usage). This command is used to show disk space usage on a particular directory.
du -h <foldername> - shows the output in human understandable format

Environmental Variables:
printenv - shows the list of all environmental Variables
printenv $SHELL - shows the location of current user's shell program.
printenv | grep SHELL - shows all the environment Variables which has the word SHELL in it.
ECHO $USER: Gives current user's name.
ECHO $PATH: Gives search path for commands.
ECHO $PWD: Gives the path of present working directory.
ECHO $HOME: Gives path of home directory.
ECHO $HOSTNAME: Gives name of the host.
ECHO $LANG: Gives the default system language.
ECHO $EDITOR: Gives default file editor.
ECHO $UID: Gives user ID of current user.
ECHO $SHELL: Gives location of current user's shell program.

Setting Environmental Variable:
export Variable=value - sets the environmental value for the given Variable for the current terminal
echo Variable=value >> .bashrc - run this command from the home directory to set permanent environment Variable

Process:
ps - shows the processes running on the current shell
kill <processID> - terminates a particular process

File permissions:
ls -l - list the files and folders in a directory.
drwxrwxr-x - d - directory, r - read, w - write, x - execute
    d rwx rwx r-x
        d is directory. For files its -
        rwx - next 3 is for the user who owns this file.
        rwx - represents the group that owns this file.
        r-x - for everyone earliest
chmod u+x - this command adds the execute permission for the user
chmod g+x - execute permission for group
chmod o+x - for others
chmod u-x - removes the execute permission for the user.

Shell scripting basics:
1. Create a file with the extension ".sh". i.e., <filename>.sh
2. Write linux commands into the file.
3. Run the file using "./<filename>.sh" to see the output in the terminal

echo $$ - the command writes the PID of the current shell

who -u - 

cron job
top, atop command
memstat, iostat
who -a
last
iostat
vmstat


